{"remainingRequest":"/Users/frank/Documents/GitHub/travel-vue3/node_modules/babel-loader/lib/index.js!/Users/frank/Documents/GitHub/travel-vue3/node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/templateLoader.js??ref--6!/Users/frank/Documents/GitHub/travel-vue3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/frank/Documents/GitHub/travel-vue3/node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!/Users/frank/Documents/GitHub/travel-vue3/node_modules/vue-awesome-swiper/src/swiper.vue?vue&type=template&id=ee2374dc","dependencies":[{"path":"/Users/frank/Documents/GitHub/travel-vue3/node_modules/vue-awesome-swiper/src/swiper.vue","mtime":1594473394860},{"path":"/Users/frank/Documents/GitHub/travel-vue3/node_modules/cache-loader/dist/cjs.js","mtime":1594473392680},{"path":"/Users/frank/Documents/GitHub/travel-vue3/node_modules/babel-loader/lib/index.js","mtime":1594473392373},{"path":"/Users/frank/Documents/GitHub/travel-vue3/node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/templateLoader.js","mtime":1594473394877},{"path":"/Users/frank/Documents/GitHub/travel-vue3/node_modules/cache-loader/dist/cjs.js","mtime":1594473392680},{"path":"/Users/frank/Documents/GitHub/travel-vue3/node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js","mtime":1594473394874}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVuZGVyU2xvdCBhcyBfcmVuZGVyU2xvdCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrIH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgImNsYXNzIjogInN3aXBlci1jb250YWluZXIiCn07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX3JlbmRlclNsb3QoX2N0eC4kc2xvdHMsICJwYXJhbGxheC1iZyIpLCBfY3JlYXRlVk5vZGUoImRpdiIsIHsKICAgICJjbGFzcyI6IF9jdHguZGVmYXVsdFN3aXBlckNsYXNzZXMud3JhcHBlckNsYXNzCiAgfSwgW19yZW5kZXJTbG90KF9jdHguJHNsb3RzLCAiZGVmYXVsdCIpXSwgMgogIC8qIENMQVNTICovCiAgKSwgX3JlbmRlclNsb3QoX2N0eC4kc2xvdHMsICJwYWdpbmF0aW9uIiksIF9yZW5kZXJTbG90KF9jdHguJHNsb3RzLCAiYnV0dG9uLXByZXYiKSwgX3JlbmRlclNsb3QoX2N0eC4kc2xvdHMsICJidXR0b24tbmV4dCIpLCBfcmVuZGVyU2xvdChfY3R4LiRzbG90cywgInNjcm9sbGJhciIpXSk7Cn0="},{"version":3,"sources":["/Users/frank/Documents/GitHub/travel-vue3/node_modules/vue-awesome-swiper/src/swiper.vue"],"names":[],"mappings":";;AACO,WAAM;;;uBAAX,YAAA,CASM,KATN,EAAA,UAAA,EASM,CARJ,WAAA,CAAgC,IAAA,CAAA,MAAhC,EAAgC,aAAhC,CAQI,EAPJ,YAAA,CAEM,KAFN,EAEM;AAFA,aAAO,IAAA,CAAA,oBAAA,CAAqB;AAE5B,GAFN,E,CACE,WAAA,CAAa,IAAA,CAAA,MAAb,EAAa,SAAb,C,CADF,E;;AAAA,GAOI,EAJJ,WAAA,CAA+B,IAAA,CAAA,MAA/B,EAA+B,YAA/B,CAII,EAHJ,WAAA,CAAgC,IAAA,CAAA,MAAhC,EAAgC,aAAhC,CAGI,EAFJ,WAAA,CAAgC,IAAA,CAAA,MAAhC,EAAgC,aAAhC,CAEI,EADJ,WAAA,CAA8B,IAAA,CAAA,MAA9B,EAA8B,WAA9B,CACI,CATN,C","sourcesContent":["<template>\n  <div class=\"swiper-container\">\n    <slot name=\"parallax-bg\"></slot>\n    <div :class=\"defaultSwiperClasses.wrapperClass\">\n      <slot></slot>\n    </div>\n    <slot name=\"pagination\"></slot>\n    <slot name=\"button-prev\"></slot>\n    <slot name=\"button-next\"></slot>\n    <slot name=\"scrollbar\"></slot>\n  </div>\n</template>\n\n<script>\n  var browser = typeof window !== 'undefined'\n  if (browser) window.Swiper = require('swiper')\n  export default {\n    name: 'swiper',\n    props: {\n      options: {\n        type: Object,\n        default: function() {\n          return {\n            autoplay: 3500\n          }\n        }\n      },\n      notNextTick: {\n        type: Boolean,\n        default: function() {\n          return false\n        }\n      }\n    },\n    data: function() {\n      return {\n        defaultSwiperClasses: {\n          wrapperClass: 'swiper-wrapper'\n        }\n      }\n    },\n    ready: function() {\n      if (!this.swiper && browser) {\n        this.swiper = new Swiper(this.$el, this.options)\n      }\n    },\n    mounted: function() {\n      var self = this\n      var mount = function() {\n        if (!self.swiper && browser) {\n          delete self.options.notNextTick\n          var setClassName = false\n          for(var className in self.defaultSwiperClasses){\n            if (self.defaultSwiperClasses.hasOwnProperty(className)) {\n              if (self.options[className]) {\n                setClassName = true\n                self.defaultSwiperClasses[className] = self.options[className]\n              }\n            }\n          }\n          var mountInstance = function() {\n            self.swiper = new Swiper(self.$el, self.options)\n          }\n          setClassName ? self.$nextTick(mountInstance) : mountInstance()\n        }\n      }\n      (this.options.notNextTick || this.notNextTick) ? mount() : this.$nextTick(mount)\n    },\n    updated: function() {\n      if (this.swiper) {\n        this.swiper.update()\n      }\n    },\n    beforeDestroy: function() {\n      if (this.swiper) {\n        this.swiper.destroy()\n        delete this.swiper\n      }\n    }\n  }\n</script>\n"],"sourceRoot":""}]}